<Window x:Class="PropertyMgmt.Windows.TenantEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:uc="clr-namespace:PropertyMgmt.Windows.UserControls"
        xmlns:vm="clr-namespace:PropertyMgmt.ViewModel"
        xmlns:ignore="http://www.ignore.com"
        mc:Ignorable="d ignore"
        Title="Tenant information for (no property)"
        MinHeight="580" MinWidth="832" Height="588" Width="839"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Closed="Window_Closed">

    <DockPanel DataContext="{Binding WorkingTenant}">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Letters"/>
        </Menu>
        <Grid DockPanel.Dock="Bottom">
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,10">
                <Button Content="OK" HorizontalAlignment="Right" Width="50" Margin="10,0" IsDefault="True"
                        Command="{Binding DataContext.SaveItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.Tenant}"/>
                <Button Content="Cancel" HorizontalAlignment="Right" Width="50" Margin="10,0" IsCancel="True"/>
            </StackPanel>

        </Grid>
        <Grid>
            <TabControl>
                <TabItem Header="Information">
                    <Grid>
                        <GroupBox Header="Location" Margin="48,10,260,308">
                            <StackPanel Orientation="Vertical">
                                <Grid Width="500" HorizontalAlignment="Stretch">
                                    <TextBlock HorizontalAlignment="Left" Margin="10" TextWrapping="Wrap" Text="Property:" VerticalAlignment="Top"/>
                                    <ComboBox Name="cbProperty" HorizontalAlignment="Right" Margin="0,7,10,7" VerticalAlignment="Center" Width="340"
                                              ItemsSource="{Binding DataContext.PropertyList, RelativeSource={RelativeSource AncestorType=Window}}" DisplayMemberPath="FullAddress"
                                              SelectedValue="{Binding PropertyListed}" SelectionChanged="cbProperty_SelectionChanged"/>
                                </Grid>
                                <Grid Width="500" HorizontalAlignment="Stretch">
                                    <TextBlock HorizontalAlignment="Left" Margin="10" TextWrapping="Wrap" Text="Property info:" VerticalAlignment="Top"/>
                                    <DataGrid Name="datagridPropertyInfo"  ItemsSource="{Binding PropertyInGrid, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Width="340"
                                              AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" HeadersVisibility="Column" Margin="0,0,10,0">
                                        <DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow">
                                                <EventSetter Event="MouseDoubleClick" Handler="datagridPropertyInfo_MouseDoubleClick"/>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Owner" Width="2*" Binding="{Binding Owner.company_name}"/>
                                            <DataGridTextColumn Header="Address" Width="2*" Binding="{Binding address1}"/>
                                            <DataGridTextColumn Header="City" Width="2*" Binding="{Binding city}"/>
                                            <DataGridTextColumn Header="State" Width="*" Binding="{Binding state}"/>
                                            <DataGridTextColumn Header="Zip" Width="*" Binding="{Binding zip}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Rent/Deposits" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,10,0" Width="222" Height="318">
                            <Grid>
                                <StackPanel Orientation="Vertical">
                                    <Grid HorizontalAlignment="Stretch" Margin="4,9,0,0" VerticalAlignment="Top">
                                        <TextBlock TextWrapping="Wrap" Text="Past due:" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBox IsReadOnly="True" Name="txtRentNextDueDate" Width="100" HorizontalAlignment="Right" Text="{Binding CurrentBalance, Mode=OneWay, StringFormat={}{0:C}}"
                                                 TextBlock.Foreground="{Binding CurrentBalanceColor}"/>
                                    </Grid>
                                    <!--<Grid HorizontalAlignment="Stretch" Margin="4,9,0,0" VerticalAlignment="Top">
                                        <TextBlock TextWrapping="Wrap" Text="Status:" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        <TextBox IsReadOnly="True" Name="txtRentStatus" Width="100" HorizontalAlignment="Right"></TextBox>
                                    </Grid>-->
                                </StackPanel>
                                <Grid>
                                    <GroupBox Header="Rent history" Margin="0,67,0,0">
                                        <DataGrid Margin="5" Name="dataGridRentHistory" ItemsSource="{Binding RentHistoryList}">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Due" Width="*" Binding="{Binding due_date,StringFormat='d'}"/>
                                                <DataGridTextColumn Header="Balance" Width="*" Binding="{Binding balance, StringFormat={}{0:C}}"/>
                                            </DataGrid.Columns>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow">
                                                    <Setter Property="Foreground" Value="{Binding balance_color}"/>
                                                </Style>
                                            </DataGrid.RowStyle>
                                        </DataGrid>
                                    </GroupBox>
                                </Grid>
                            </Grid>

                        </GroupBox>
                        <GroupBox Header="Vehicle(s)" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,333,10,0" Width="222" Height="120">
                            <StackPanel Orientation="Vertical">
                                <Grid HorizontalAlignment="Stretch" Margin="4,2,0,0" VerticalAlignment="Stretch">
                                    <DataGrid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Vehicles}" AutoGenerateColumns="False" CanUserAddRows="True" IsReadOnly="False">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Color" Binding="{Binding Model}" Width="*"/>
                                            <DataGridTextColumn Header="Year" Binding="{Binding Year}" Width="*"/>
                                            <DataGridTextColumn Header="Make" Binding="{Binding Make}" Width="*"/>
                                            <DataGridTextColumn Header="Model" Binding="{Binding Model}" Width="*"/>
                                            <DataGridTextColumn Header="Plate" Binding="{Binding Model}" Width="*"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Tenant" Margin="48,175,260,0" VerticalAlignment="Top" Height="153">
                            <StackPanel>
                                <Grid Width="500">
                                    <TextBlock HorizontalAlignment="Left" Margin="10" TextWrapping="Wrap" Text="Tenant info:" VerticalAlignment="Top"/>
                                    <DataGrid Name="datagridContactInfo" ItemsSource="{Binding ContactInGrid, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ContactListed}"
                                              HorizontalAlignment="Right" Width="340" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" HeadersVisibility="Column" Margin="0,0,10,0"
                                              MouseDoubleClick="datagridContactInfo_MouseDoubleClick">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Name" Width="*" Binding="{Binding FullName}"/>
                                            <DataGridTextColumn Header="Phone #" Width="*" Binding="{Binding phone1}"/>
                                            <DataGridTextColumn Header="Email" Width="2*" Binding="{Binding email}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                                <Grid Width="500">
                                    <TextBlock HorizontalAlignment="Left" Margin="10" TextWrapping="Wrap" Text="Lease:" VerticalAlignment="Top"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="340" Margin="0,0,10,0">
                                        <TextBlock HorizontalAlignment="Left" Margin="0,10,5,0" TextWrapping="Wrap" Text="Start date: " VerticalAlignment="Top"/>
                                        <DatePicker Name="txtLeaseStart" Width="100" VerticalAlignment="Center" Text="{Binding lease_start, StringFormat='d'}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                                        <TextBlock HorizontalAlignment="Left" Margin="0,10,5,0" TextWrapping="Wrap" Text="End date: " VerticalAlignment="Top"/>
                                        <DatePicker Name="txtLeaseEnd" Width="100" VerticalAlignment="Center" Text="{Binding lease_end, StringFormat='d'}"/>
                                    </StackPanel>
                                </Grid>
                                <Grid Width="500">
                                    <TextBlock HorizontalAlignment="Left" Margin="10" TextWrapping="Wrap" Text="Rent amount: " VerticalAlignment="Top"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="350">
                                        <TextBox Name="txtRentAmount" Width="50" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding rent_amt}"/>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </GroupBox>
                    </Grid>


                </TabItem>
                <TabItem Header="Work records">
                    <TabControl>
                        <TabItem Header="Service calls">
                            <Grid>
                                <StackPanel Orientation="Vertical">
                                    <Grid>
                                        <CheckBox Name="chkShowActiveOnly" Content="Show active only" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button Name="btnNewServiceCall" Content="_New..." Width="60"
                                                            Command="{Binding DataContext.NewItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.ServiceCall}"/>
                                            <Button Name="btnChangeServiceCall" Content="_Change..." Width="60"
                                                            Command="{Binding DataContext.OpenItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.ServiceCall}"/>
                                            <Button Name="btnDeleteServiceCall" Content="_Delete..." Width="60"
                                                            Command="{Binding DataContext.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.ServiceCall}"/>
                                        </StackPanel>
                                    </Grid>
                                    <DataGrid Margin="0,4,0,0" Name="datagridServiceCalls" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding ServiceCallList}"
                                                      SelectedItem="{Binding WorkingServiceCall}" AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" 
                                                      CanUserDeleteRows="False" HeadersVisibility="Column">
                                        <DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow">
                                                <EventSetter Event="MouseDoubleClick" Handler="datagridServiceCalls_MouseDoubleClick"/>
                                                <Setter Property="Visibility" Value="{Binding Visible}"/>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Invoice #" Width=".7*" Binding="{Binding invoice_nbr}"/>
                                            <DataGridTextColumn Header="Date called in" Width="*" Binding="{Binding time_placed}"/>
                                            <DataGridTextColumn Header="Date completed" Width="1.2*" Binding="{Binding time_completed}"/>
                                            <DataGridTextColumn Header="Summary" Width="3*" Binding="{Binding summary}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Correspondence">
                            <Grid Margin="0,10,0,0">
                                <StackPanel Orientation="Vertical">
                                    <Grid HorizontalAlignment="Stretch">
                                        <CheckBox Name="chkShowFollowup" Content="Show marked for followup only" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button Name="btnNewCorrespondence" Content="_New..." Width="60"
                                                    Command="{Binding DataContext.NewItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.Correspondence}"/>
                                            <Button Name="btnChangeCorrespondence" Content="_Change..." Width="60"
                                                    Command="{Binding DataContext.OpenItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.Correspondence}"/>
                                            <Button Name="btnDeleteCorrespondence" Content="_Delete..." Width="60"
                                                    Command="{Binding DataContext.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.Correspondence}"/>
                                        </StackPanel>
                                    </Grid>

                                    <DataGrid Margin="0,10,0,0" Name="datagridCorresponances" ItemsSource="{Binding CorrespondencesList}" SelectedItem="{Binding WorkingCorrespondence}">
                                        <DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow">
                                                <EventSetter Event="MouseDoubleClick" Handler="datagridCorresponances_MouseDoubleClick"/>
                                                <Setter Property="Visibility" Value="{Binding Visible}"/>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Summary" Width="3*" Binding="{Binding summary}"/>
                                            <DataGridTextColumn Header="Call date/time" Width="*" Binding="{Binding time_placed}"/>
                                            <DataGridTextColumn Header="Date completed" Width="*" Binding="{Binding time_completed}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Ledger">
                            <Grid Margin="0,10,0,0">
                                <StackPanel Orientation="Vertical">
                                    <Grid>
                                        <CheckBox Name="chkShowRecent" Content="Show within the last 6 months only" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button Name="btnNewLedgerRecord" Content="_New..." Width="60"
                                                    Command="{Binding DataContext.NewItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.LedgerRecord}"/>
                                            <Button Name="btnChangeLedgerRecord" Content="_Change..." Width="60"
                                                    Command="{Binding DataContext.OpenItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.LedgerRecord}"/>
                                            <Button Name="btnDeleteLedgerRecord" Content="_Delete..." Width="60"
                                                    Command="{Binding DataContext.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{x:Static vm:ItemType.LedgerRecord}"/>
                                        </StackPanel>
                                    </Grid>

                                    <DataGrid Margin="0,10,0,0" Name="datagridLedger" ItemsSource="{Binding LedgerRecordsList}" SelectedItem="{Binding WorkingLedgerRecord}">
                                        <DataGrid.RowStyle> 
                                            <Style TargetType="DataGridRow">
                                                <EventSetter Event="MouseDoubleClick" Handler="datagridLedger_MouseDoubleClick"/>
                                                <Setter Property="Visibility" Value="{Binding Visible}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding LedgerType}" Value="Deposit">
                                                        <Setter Property="Foreground" Value="Blue"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding LedgerType}" Value="Charge">
                                                        <Setter Property="Foreground" Value="Red"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding LedgerType}" Value="Payment">
                                                        <Setter Property="Foreground" Value="Green"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Transaction date" Width="*" Binding="{Binding transaction_date}" />
                                            <DataGridTextColumn Header="Due date" Width="*" Binding="{Binding due_date}" />
                                            <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding amount, StringFormat={}{0:C}}"/>
                                            <DataGridTextColumn Header="Type" Width="*" Binding="{Binding LedgerType}" />
                                            <DataGridTextColumn Header="Category" Width="*" Binding="{Binding Category}"/>
                                            <DataGridTextColumn Header="Notes" Width="*" Binding="{Binding notes}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Grid>
                        </TabItem>

                    </TabControl>

                </TabItem>
                <TabItem Header="Documents">
                    <uc:DocumentsControl />
                </TabItem>
                <TabItem Header="Audit Trail">
                    <uc:AuditControl/>
                </TabItem>

            </TabControl>
        </Grid>
    </DockPanel>

</Window>
